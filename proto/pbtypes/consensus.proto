syntax = "proto3";

package pbtypes;

import "proto/pbcrypto/signature.proto";
import "proto/pbtypes/block.proto";
import "gogoproto-1.4.3/protobuf/google/protobuf/timestamp.proto";
import "gogoproto-1.4.3/gogoproto/gogo.proto";

enum ConsensusMessageType {
  option (gogoproto.goproto_enum_stringer) = true;
  option (gogoproto.goproto_enum_prefix)   = false;
  NEXT_VIEW_TYPE = 0 [(gogoproto.enumvalue_customname) = "NextViewType"];
  PREPARE_TYPE = 1 [(gogoproto.enumvalue_customname) = "PrepareType"];
  PRE_COMMIT_TYPE = 2 [(gogoproto.enumvalue_customname) = "PreCommitType"];
  COMMIT_TYPE = 3 [(gogoproto.enumvalue_customname) = "CommitType"];
  DECIDE_TYPE = 4 [(gogoproto.enumvalue_customname) = "DecideType"];
}

message Prepare {
  int64 height = 1;
  pbtypes.Block block = 2;
  google.protobuf.Timestamp timestamp = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  pbcrypto.Signature signature = 4;
}

// protoc --gogofaster_out=. -I=$GOPATH/src/meta-- -I=$GOPATH/src -I=$GOPATH/src/gogoproto-1.4.3/protobuf -I=. proposal.proto